//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3649
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data;



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IService")]
public interface IService
{
    
    // CODEGEN: Parameter 'eTransactionCountResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eTransactionCount", ReplyAction="http://tempuri.org/IService/eTransactionCountResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    eTransactionCountResponse eTransactionCount(eTransactionCountRequest request);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="eTransactionCount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class eTransactionCountRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string QryDate;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string UserID;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string Password;
    
    public eTransactionCountRequest()
    {
    }
    
    public eTransactionCountRequest(string QryDate, string UserID, string Password)
    {
        this.QryDate = QryDate;
        this.UserID = UserID;
        this.Password = Password;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="eTransactionCountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class eTransactionCountResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Data.DataSet eTransactionCountResult;
    
    public eTransactionCountResponse()
    {
    }
    
    public eTransactionCountResponse(System.Data.DataSet eTransactionCountResult)
    {
        this.eTransactionCountResult = eTransactionCountResult;
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IServiceChannel : IService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ServiceClient : System.ServiceModel.ClientBase<IService>, IService
{
    
    public ServiceClient()
    {
    }
    
    public ServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    eTransactionCountResponse IService.eTransactionCount(eTransactionCountRequest request)
    {
        return base.Channel.eTransactionCount(request);
    }
    
    public System.Data.DataSet eTransactionCount(string QryDate, string UserID, string Password)
    {
        eTransactionCountRequest inValue = new eTransactionCountRequest();
        inValue.QryDate = QryDate;
        inValue.UserID = UserID;
        inValue.Password = Password;
        eTransactionCountResponse retVal = ((IService)(this)).eTransactionCount(inValue);
        return retVal.eTransactionCountResult;
    }
}
